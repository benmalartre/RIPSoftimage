#usda 1.0
(
    endTimeCode = 24
    startTimeCode = 1
)

def "Camera_Root"
{
    def Camera "Camera"
    {
    }
}

def Mesh "cube"
{
    float3[] extent.timeSamples = {
        1: [(-1.2473118, 0.07920981, -1.2473118), (1.2473118, 6.59742, 1.2473118)],
    }
    int[] faceVertexCounts = [4, 4, 4, 4, 4, 4]
    int[] faceVertexCounts.timeSamples = {
        1: [4, 4, 4, 4, 4, 4],
    }
    int[] faceVertexIndices = [0, 2, 3, 1, 0, 1, 5, 4, 0, 4, 6, 2, 1, 3, 7, 5, 2, 6, 7, 3, 4, 5, 7, 6]
    int[] faceVertexIndices.timeSamples = {
        1: [0, 2, 3, 1, 0, 1, 5, 4, 0, 4, 6, 2, 1, 3, 7, 5, 2, 6, 7, 3, 4, 5, 7, 6],
    }
    point3f[] points = [(-1.2473118, 0.07920981, -1.2473118), (1.2473118, 0.07920981, -1.2473118), (-1.2473118, 6.59742, -1.2473118), (1.2473118, 6.59742, -1.2473118), (-1.2473118, 0.07920981, 1.2473118), (1.2473118, 0.07920981, 1.2473118), (-1.2473118, 6.59742, 1.2473118), (1.2473118, 6.59742, 1.2473118)]
    point3f[] points.timeSamples = {
        1: [(-1.2473118, 0.07920981, -1.2473118), (1.2473118, 0.07920981, -1.2473118), (-1.2473118, 6.59742, -1.2473118), (1.2473118, 6.59742, -1.2473118), (-1.2473118, 0.07920981, 1.2473118), (1.2473118, 0.07920981, 1.2473118), (-1.2473118, 6.59742, 1.2473118), (1.2473118, 6.59742, 1.2473118)],
    }
    color3f[] primvars:displayColor.timeSamples = {
        1: [(0.7, 1, 0)],
    }
    matrix4d xformOp:transform = ( (0.9801827175287128, -0.1980955331602096, -0, 0), (0.1980955331602096, 0.9801827175287128, 0, 0), (0, -0, 1, 0), (0, 0, 0, 1) )
    matrix4d xformOp:transform.timeSamples = {
        1: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) ),
        2: ( (0.9996521315913472, -0.026374529472122557, -0, 0), (0.026374529472122557, 0.9996521315913472, 0, 0), (0, -0, 1, 0), (0, 0, 0, 1) ),
        3: ( (0.9952924518494479, -0.09691715684807503, -0, 0), (0.09691715684807503, 0.9952924518494479, 0, 0), (0, -0, 1, 0), (0, 0, 0, 1) ),
        4: ( (0.9801827175287127, -0.19809553316021009, -0, 0), (0.19809553316021009, 0.9801827175287127, 0, 0), (0, -0, 1, 0), (0, 0, 0, 1) ),
        5: ( (0.9489987620120283, -0.31527979589507116, -0, 0), (0.31527979589507116, 0.9489987620120283, 0, 0), (0, -0, 1, 0), (0, 0, 0, 1) ),
        6: ( (0.901133657575939, -0.43354138347314697, -0, 0), (0.43354138347314697, 0.901133657575939, 0, 0), (0, -0, 1, 0), (0, 0, 0, 1) ),
        7: ( (0.8420326716599038, -0.5394265286925408, -0, 0), (0.5394265286925408, 0.8420326716599038, 0, 0), (0, -0, 1, 0), (0, 0, 0, 1) ),
        8: ( (0.7825152783174598, -0.6226313830829189, -0, 0), (0.6226313830829189, 0.7825152783174598, 0, 0), (0, -0, 1, 0), (0, 0, 0, 1) ),
        9: ( (0.7365824736145752, -0.676347735683231, -0, 0), (0.676347735683231, 0.7365824736145752, 0, 0), (0, -0, 1, 0), (0, 0, 0, 1) ),
        10: ( (0.7184878865534563, -0.6955394718317197, -0, 0), (0.6955394718317197, 0.7184878865534563, 0, 0), (0, -0, 1, 0), (0, 0, 0, 1) ),
        11: ( (0.7477221205281147, -0.6640117698301284, -0, 0), (0.6640117698301284, 0.7477221205281147, 0, 0), (0, -0, 1, 0), (0, 0, 0, 1) ),
        12: ( (0.8199574841035988, -0.5724244266822447, -0, 0), (0.5724244266822447, 0.8199574841035988, 0, 0), (0, -0, 1, 0), (0, 0, 0, 1) ),
        13: ( (0.9058292544290311, -0.4236429650313406, -0, 0), (0.4236429650313406, 0.9058292544290311, 0, 0), (0, -0, 1, 0), (0, 0, 0, 1) ),
        14: ( (0.9739822185985985, -0.2266244423131628, -0, 0), (0.2266244423131628, 0.9739822185985985, 0, 0), (0, -0, 1, 0), (0, 0, 0, 1) ),
        15: ( (0.9999991159853698, -0.001329672320142745, -0, 0), (0.001329672320142745, 0.9999991159853698, 0, 0), (0, -0, 1, 0), (0, 0, 0, 1) ),
        16: ( (0.9745814465052494, 0.22403348885319763, -0, 0), (-0.22403348885319763, 0.9745814465052494, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) ),
        17: ( (0.9069526630177022, 0.42123255696242007, -0, 0), (-0.42123255696242007, 0.9069526630177022, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) ),
        18: ( (0.8214768571725855, 0.5702418549438927, -0, 0), (-0.5702418549438927, 0.8214768571725855, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) ),
        19: ( (0.7494853111202673, 0.6620209727908596, -0, 0), (-0.6620209727908596, 0.7494853111202673, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) ),
        20: ( (0.7203350234707453, 0.6936263071434076, -0, 0), (-0.6936263071434076, 0.7203350234707453, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) ),
        21: ( (0.7338360993555567, 0.6793265630627301, -0, 0), (-0.6793265630627301, 0.7338360993555567, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) ),
        22: ( (0.7690365263619154, 0.639204835026456, -0, 0), (-0.639204835026456, 0.7690365263619154, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) ),
        23: ( (0.8168902396323006, 0.5767931487053938, -0, 0), (-0.5767931487053938, 0.8168902396323006, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) ),
        24: ( (0.8681795988992896, 0.49625012247360556, -0, 0), (-0.49625012247360556, 0.8681795988992896, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) ),
    }
    uniform token[] xformOpOrder = ["xformOp:transform"]

    def Mesh "cube1"
    {
        float3[] extent.timeSamples = {
            1: [(-1.2473118, 0.07920981, -1.2473118), (1.2473118, 6.59742, 1.2473118)],
        }
        int[] faceVertexCounts = [4, 4, 4, 4, 4, 4]
        int[] faceVertexCounts.timeSamples = {
            1: [4, 4, 4, 4, 4, 4],
        }
        int[] faceVertexIndices = [0, 2, 3, 1, 0, 1, 5, 4, 0, 4, 6, 2, 1, 3, 7, 5, 2, 6, 7, 3, 4, 5, 7, 6]
        int[] faceVertexIndices.timeSamples = {
            1: [0, 2, 3, 1, 0, 1, 5, 4, 0, 4, 6, 2, 1, 3, 7, 5, 2, 6, 7, 3, 4, 5, 7, 6],
        }
        point3f[] points = [(-1.2473118, 0.07920981, -1.2473118), (1.2473118, 0.07920981, -1.2473118), (-1.2473118, 6.59742, -1.2473118), (1.2473118, 6.59742, -1.2473118), (-1.2473118, 0.07920981, 1.2473118), (1.2473118, 0.07920981, 1.2473118), (-1.2473118, 6.59742, 1.2473118), (1.2473118, 6.59742, 1.2473118)]
        point3f[] points.timeSamples = {
            1: [(-1.2473118, 0.07920981, -1.2473118), (1.2473118, 0.07920981, -1.2473118), (-1.2473118, 6.59742, -1.2473118), (1.2473118, 6.59742, -1.2473118), (-1.2473118, 0.07920981, 1.2473118), (1.2473118, 0.07920981, 1.2473118), (-1.2473118, 6.59742, 1.2473118), (1.2473118, 6.59742, 1.2473118)],
        }
        color3f[] primvars:displayColor.timeSamples = {
            1: [(0.7, 1, 0)],
        }
        matrix4d xformOp:transform = ( (0.9964908342307339, 0.08370195513926725, -0, 0), (-0.08370195513926725, 0.9964908342307339, 0, 0), (0, 0, 1, 0), (0, 6.9998732929226, 0, 1) )
        matrix4d xformOp:transform.timeSamples = {
            1: ( (0.9519146308089104, 0.30636340455729355, -0, 0), (-0.30636340455729355, 0.9519146308089104, 0, 0), (0, 0, 1, 0), (0, 6.9998732929226, 0, 1) ),
            2: ( (0.9767953366770534, 0.21417485904270317, -0, 0), (-0.21417485904270317, 0.9767953366770534, 0, 0), (0, 0, 1, 0), (0, 6.9998732929226, 0, 1) ),
            3: ( (0.9906054734262553, 0.13675085381066093, -0, 0), (-0.13675085381066093, 0.9906054734262553, 0, 0), (0, 0, 1, 0), (0, 6.9998732929226, 0, 1) ),
            4: ( (0.996490834230734, 0.08370195513926663, -0, 0), (-0.08370195513926663, 0.996490834230734, 0, 0), (0, 0, 1, 0), (0, 6.9998732929226, 0, 1) ),
            5: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 6.9998732929226, 0, 1) ),
            6: ( (0.9996521315913472, -0.02637452947212254, -0, 0), (0.02637452947212254, 0.9996521315913472, 0, 0), (0, -0, 1, 0), (0, 6.9998732929226, 0, 1) ),
            7: ( (0.9952924518494479, -0.09691715684807511, -0, 0), (0.09691715684807511, 0.9952924518494479, 0, 0), (0, -0, 1, 0), (0, 6.9998732929226, 0, 1) ),
            8: ( (0.9801827175287127, -0.19809553316021009, -0, 0), (0.19809553316021009, 0.9801827175287127, 0, 0), (0, -0, 1, 0), (0, 6.9998732929226, 0, 1) ),
            9: ( (0.9489987620120283, -0.31527979589507116, -0, 0), (0.31527979589507116, 0.9489987620120283, 0, 0), (0, -0, 1, 0), (0, 6.9998732929226, 0, 1) ),
            10: ( (0.901133657575939, -0.43354138347314713, -0, 0), (0.43354138347314713, 0.901133657575939, 0, 0), (0, -0, 1, 0), (0, 6.9998732929226, 0, 1) ),
            11: ( (0.8420326716599037, -0.539426528692541, -0, 0), (0.539426528692541, 0.8420326716599037, 0, 0), (0, -0, 1, 0), (0, 6.9998732929226, 0, 1) ),
            12: ( (0.7825152783174597, -0.622631383082919, -0, 0), (0.622631383082919, 0.7825152783174597, 0, 0), (0, -0, 1, 0), (0, 6.9998732929226, 0, 1) ),
            13: ( (0.736582473614575, -0.6763477356832313, -0, 0), (0.6763477356832313, 0.736582473614575, 0, 0), (0, -0, 1, 0), (0, 6.9998732929226, 0, 1) ),
            14: ( (0.7184878865534563, -0.6955394718317197, -0, 0), (0.6955394718317197, 0.7184878865534563, 0, 0), (0, -0, 1, 0), (0, 6.9998732929226, 0, 1) ),
            15: ( (0.7477221205281147, -0.6640117698301284, -0, 0), (0.6640117698301284, 0.7477221205281147, 0, 0), (0, -0, 1, 0), (0, 6.9998732929226, 0, 1) ),
            16: ( (0.8199574841035987, -0.5724244266822448, -0, 0), (0.5724244266822448, 0.8199574841035987, 0, 0), (0, -0, 1, 0), (0, 6.9998732929226, 0, 1) ),
            17: ( (0.9058292544290311, -0.4236429650313406, -0, 0), (0.4236429650313406, 0.9058292544290311, 0, 0), (0, -0, 1, 0), (0, 6.9998732929226, 0, 1) ),
            18: ( (0.9739822185985983, -0.22662444231316312, -0, 0), (0.22662444231316312, 0.9739822185985983, 0, 0), (0, -0, 1, 0), (0, 6.9998732929226, 0, 1) ),
            19: ( (0.9999991159853698, -0.001329672320143241, -0, 0), (0.001329672320143241, 0.9999991159853698, 0, 0), (0, -0, 1, 0), (0, 6.9998732929226, 0, 1) ),
            20: ( (0.9745814465052495, 0.22403348885319727, -0, 0), (-0.22403348885319727, 0.9745814465052495, 0, 0), (0, 0, 1, 0), (0, 6.9998732929226, 0, 1) ),
            21: ( (0.9069526630177022, 0.42123255696241985, -0, 0), (-0.42123255696241985, 0.9069526630177022, 0, 0), (0, 0, 1, 0), (0, 6.9998732929226, 0, 1) ),
            22: ( (0.8214768571725858, 0.5702418549438923, -0, 0), (-0.5702418549438923, 0.8214768571725858, 0, 0), (0, 0, 1, 0), (0, 6.9998732929226, 0, 1) ),
            23: ( (0.7494853111202673, 0.6620209727908596, -0, 0), (-0.6620209727908596, 0.7494853111202673, 0, 0), (0, 0, 1, 0), (0, 6.9998732929226, 0, 1) ),
            24: ( (0.7203350234707453, 0.6936263071434076, -0, 0), (-0.6936263071434076, 0.7203350234707453, 0, 0), (0, 0, 1, 0), (0, 6.9998732929226, 0, 1) ),
        }
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "cube2"
        {
            float3[] extent.timeSamples = {
                1: [(-1.2473118, 0.07920981, -1.2473118), (1.2473118, 6.59742, 1.2473118)],
            }
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4]
            int[] faceVertexCounts.timeSamples = {
                1: [4, 4, 4, 4, 4, 4],
            }
            int[] faceVertexIndices = [0, 2, 3, 1, 0, 1, 5, 4, 0, 4, 6, 2, 1, 3, 7, 5, 2, 6, 7, 3, 4, 5, 7, 6]
            int[] faceVertexIndices.timeSamples = {
                1: [0, 2, 3, 1, 0, 1, 5, 4, 0, 4, 6, 2, 1, 3, 7, 5, 2, 6, 7, 3, 4, 5, 7, 6],
            }
            point3f[] points = [(-1.2473118, 0.07920981, -1.2473118), (1.2473118, 0.07920981, -1.2473118), (-1.2473118, 6.59742, -1.2473118), (1.2473118, 6.59742, -1.2473118), (-1.2473118, 0.07920981, 1.2473118), (1.2473118, 0.07920981, 1.2473118), (-1.2473118, 6.59742, 1.2473118), (1.2473118, 6.59742, 1.2473118)]
            point3f[] points.timeSamples = {
                1: [(-1.2473118, 0.07920981, -1.2473118), (1.2473118, 0.07920981, -1.2473118), (-1.2473118, 6.59742, -1.2473118), (1.2473118, 6.59742, -1.2473118), (-1.2473118, 0.07920981, 1.2473118), (1.2473118, 0.07920981, 1.2473118), (-1.2473118, 6.59742, 1.2473118), (1.2473118, 6.59742, 1.2473118)],
            }
            color3f[] primvars:displayColor.timeSamples = {
                1: [(0.7, 1, 0)],
            }
            matrix4d xformOp:transform = ( (0.8681795988992892, 0.4962501224736064, -0, 0), (-0.4962501224736064, 0.8681795988992892, 0, 0), (0, 0, 1, 0), (0, 6.9998732929226, 0, 1) )
            matrix4d xformOp:transform.timeSamples = {
                1: ( (0.7338360993555568, 0.67932656306273, -0, 0), (-0.67932656306273, 0.7338360993555568, 0, 0), (0, 0, 1, 0), (0, 6.9998732929226, 0, 1) ),
                2: ( (0.7690365263619157, 0.6392048350264559, -0, 0), (-0.6392048350264559, 0.7690365263619157, 0, 0), (0, 0, 1, 0), (0, 6.9998732929226, 0, 1) ),
                3: ( (0.8168902396323006, 0.5767931487053938, -0, 0), (-0.5767931487053938, 0.8168902396323006, 0, 0), (0, 0, 1, 0), (0, 6.9998732929226, 0, 1) ),
                4: ( (0.8681795988992899, 0.4962501224736052, -0, 0), (-0.4962501224736052, 0.8681795988992899, 0, 0), (0, 0, 1, 0), (0, 6.9998732929226, 0, 1) ),
                5: ( (0.9149863346873157, 0.40348482912678574, -0, 0), (-0.40348482912678574, 0.9149863346873157, 0, 0), (0, 0, 1, 0), (0, 6.9998732929226, 0, 1) ),
                6: ( (0.9519146308089103, 0.3063634045572939, -0, 0), (-0.3063634045572939, 0.9519146308089103, 0, 0), (0, 0, 1, 0), (0, 6.9998732929226, 0, 1) ),
                7: ( (0.9767953366770535, 0.21417485904270292, -0, 0), (-0.21417485904270292, 0.9767953366770535, 0, 0), (0, 0, 1, 0), (0, 6.9998732929226, 0, 1) ),
                8: ( (0.9906054734262552, 0.1367508538106613, -0, 0), (-0.1367508538106613, 0.9906054734262552, 0, 0), (0, 0, 1, 0), (0, 6.9998732929226, 0, 1) ),
                9: ( (0.9964908342307339, 0.08370195513926737, -0, 0), (-0.08370195513926737, 0.9964908342307339, 0, 0), (0, 0, 1, 0), (0, 6.9998732929226, 0, 1) ),
                10: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 6.9998732929226, 0, 1) ),
                11: ( (0.9996521315913472, -0.026374529472122557, -0, 0), (0.026374529472122557, 0.9996521315913472, 0, 0), (0, -0, 1, 0), (0, 6.9998732929226, 0, 1) ),
                12: ( (0.9952924518494479, -0.09691715684807511, -0, 0), (0.09691715684807511, 0.9952924518494479, 0, 0), (0, -0, 1, 0), (0, 6.9998732929226, 0, 1) ),
                13: ( (0.9801827175287127, -0.19809553316021006, -0, 0), (0.19809553316021006, 0.9801827175287127, 0, 0), (0, -0, 1, 0), (0, 6.9998732929226, 0, 1) ),
                14: ( (0.9489987620120282, -0.3152797958950714, -0, 0), (0.3152797958950714, 0.9489987620120282, 0, 0), (0, -0, 1, 0), (0, 6.9998732929226, 0, 1) ),
                15: ( (0.901133657575939, -0.43354138347314713, -0, 0), (0.43354138347314713, 0.901133657575939, 0, 0), (0, -0, 1, 0), (0, 6.9998732929226, 0, 1) ),
                16: ( (0.8420326716599037, -0.539426528692541, -0, 0), (0.539426528692541, 0.8420326716599037, 0, 0), (0, -0, 1, 0), (0, 6.9998732929226, 0, 1) ),
                17: ( (0.7825152783174597, -0.6226313830829189, -0, 0), (0.6226313830829189, 0.7825152783174597, 0, 0), (0, -0, 1, 0), (0, 6.9998732929226, 0, 1) ),
                18: ( (0.736582473614575, -0.6763477356832313, -0, 0), (0.6763477356832313, 0.736582473614575, 0, 0), (0, -0, 1, 0), (0, 6.9998732929226, 0, 1) ),
                19: ( (0.7184878865534563, -0.6955394718317197, -0, 0), (0.6955394718317197, 0.7184878865534563, 0, 0), (0, -0, 1, 0), (0, 6.9998732929226, 0, 1) ),
                20: ( (0.7477221205281147, -0.6640117698301284, -0, 0), (0.6640117698301284, 0.7477221205281147, 0, 0), (0, -0, 1, 0), (0, 6.9998732929226, 0, 1) ),
                21: ( (0.8199574841035987, -0.5724244266822447, -0, 0), (0.5724244266822447, 0.8199574841035987, 0, 0), (0, -0, 1, 0), (0, 6.9998732929226, 0, 1) ),
                22: ( (0.905829254429031, -0.4236429650313408, -0, 0), (0.4236429650313408, 0.905829254429031, 0, 0), (0, -0, 1, 0), (0, 6.9998732929226, 0, 1) ),
                23: ( (0.9739822185985982, -0.22662444231316348, -0, 0), (0.22662444231316348, 0.9739822185985982, 0, 0), (0, -0, 1, 0), (0, 6.9998732929226, 0, 1) ),
                24: ( (0.9999991159853698, -0.001329672320143489, -0, 0), (0.001329672320143489, 0.9999991159853698, 0, 0), (0, -0, 1, 0), (0, 6.9998732929226, 0, 1) ),
            }
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }
    }
}

