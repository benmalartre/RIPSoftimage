#usda 1.0
(
    defaultPrim = "Scene_Root"
    endTimeCode = 24
    startTimeCode = 1
)

def Xform "Scene_Root"
{
    token visibility = "inherited"
    matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
    uniform token[] xformOpOrder = ["xformOp:transform"]

    def "Camera_Root"
    {
        def Camera "Camera"
        {
        }
    }

    def Xform "null1"
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Xform "null"
        {
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (0.9994939170152904, 0, 0.031810530480200265, 0), (-0, 1, 0, 0), (-0.031810530480200265, -0, 0.9994939170152904, 0), (0, 0, 0, 1) )
            matrix4d xformOp:transform.timeSamples = {
                1: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) ),
                2: ( (0.9994939170152904, 0, -0.03181053048019907, 0), (0, 1, 0, 0), (0.03181053048019907, 0, 0.9994939170152904, 0), (0, 0, 0, 1) ),
                3: ( (0.9923678501135846, 0, -0.12331281385542217, 0), (0, 1, 0, 0), (0.12331281385542217, 0, 0.9923678501135846, 0), (0, 0, 0, 1) ),
                4: ( (0.9637760657954398, 0, -0.2667127574748984, 0), (0, 1, 0, 0), (0.2667127574748984, 0, 0.9637760657954398, 0), (0, 0, 0, 1) ),
                5: ( (0.8936326403234123, 0, -0.4487991802004621, 0), (0, 1, 0, 0), (0.4487991802004621, 0, 0.8936326403234123, 0), (0, 0, 0, 1) ),
                6: ( (0.7619387892003272, 0, -0.6476490419292993, 0), (0, 1, 0, 0), (0.6476490419292993, 0, 0.7619387892003272, 0), (0, 0, 0, 1) ),
                7: ( (0.5555702330196023, 0, -0.8314696123025452, 0), (0, 1, 0, 0), (0.8314696123025452, 0, 0.5555702330196023, 0), (0, 0, 0, 1) ),
                8: ( (0.275462588954633, 0, -0.9613117923371225, 0), (0, 1, 0, 0), (0.9613117923371225, 0, 0.275462588954633, 0), (0, 0, 0, 1) ),
                9: ( (-0.058144828910475774, -0, -0.9983081582712682, 0), (0, 1, -0, 0), (0.9983081582712682, 0, -0.058144828910475774, 0), (0, 0, 0, 1) ),
                10: ( (-0.40524131400498914, -0, -0.914209755703531, 0), (0, 1, -0, 0), (0.914209755703531, 0, -0.40524131400498914, 0), (0, 0, 0, 1) ),
                11: ( (-0.7122302639075304, -0, -0.7019459033103687, 0), (0, 1, -0, 0), (0.7019459033103687, 0, -0.7122302639075304, 0), (0, 0, 0, 1) ),
                12: ( (-0.924227019806455, -0, -0.3818434441753303, 0), (0, 1, -0, 0), (0.3818434441753303, 0, -0.924227019806455, 0), (0, 0, 0, 1) ),
                13: ( (-1, -0, -1.2246467991473532e-16, 0), (0, 1, -0, 0), (1.2246467991473532e-16, 0, -1, 0), (0, 0, 0, 1) ),
                14: ( (-0.9242270198064552, -0, 0.38184344417533006, 0), (-0, 1, -0, 0), (-0.38184344417533006, -0, -0.9242270198064552, 0), (0, 0, 0, 1) ),
                15: ( (-0.712230263907531, -0, 0.7019459033103682, 0), (-0, 1, -0, 0), (-0.7019459033103682, -0, -0.712230263907531, 0), (0, 0, 0, 1) ),
                16: ( (-0.40524131400498953, -0, 0.9142097557035308, 0), (-0, 1, -0, 0), (-0.9142097557035308, -0, -0.40524131400498953, 0), (0, 0, 0, 1) ),
                17: ( (-0.05814482891047624, -0, 0.9983081582712682, 0), (-0, 1, -0, 0), (-0.9983081582712682, -0, -0.05814482891047624, 0), (0, 0, 0, 1) ),
                18: ( (0.27546258895463105, 0, 0.961311792337123, 0), (-0, 1, 0, 0), (-0.961311792337123, -0, 0.27546258895463105, 0), (0, 0, 0, 1) ),
                19: ( (0.5555702330196012, 0, 0.831469612302546, 0), (-0, 1, 0, 0), (-0.831469612302546, -0, 0.5555702330196012, 0), (0, 0, 0, 1) ),
                20: ( (0.7619387892003271, 0, 0.6476490419292995, 0), (-0, 1, 0, 0), (-0.6476490419292995, -0, 0.7619387892003271, 0), (0, 0, 0, 1) ),
                21: ( (0.8936326403234117, 0, 0.4487991802004632, 0), (-0, 1, 0, 0), (-0.4487991802004632, -0, 0.8936326403234117, 0), (0, 0, 0, 1) ),
                22: ( (0.9637760657954394, 0, 0.2667127574749003, 0), (-0, 1, 0, 0), (-0.2667127574749003, -0, 0.9637760657954394, 0), (0, 0, 0, 1) ),
                23: ( (0.9923678501135846, 0, 0.12331281385542206, 0), (-0, 1, 0, 0), (-0.12331281385542206, -0, 0.9923678501135846, 0), (0, 0, 0, 1) ),
                24: ( (0.9994939170152904, 0, 0.031810530480200265, 0), (-0, 1, 0, 0), (-0.031810530480200265, -0, 0.9994939170152904, 0), (0, 0, 0, 1) ),
            }
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def Mesh "cube"
            {
                float3[] extent = [(-4, -4, -4), (4, 4, 4)]
                int[] faceVertexCounts = [4, 4, 4, 4, 4, 4]
                int[] faceVertexIndices = [0, 2, 3, 1, 0, 1, 5, 4, 0, 4, 6, 2, 1, 3, 7, 5, 2, 6, 7, 3, 4, 5, 7, 6]
                normal3f[] normals = [(0, -0, -1), (0, -0, -1), (0, -0, -1), (0, -0, -1), (-0, -1, 0), (-0, -1, 0), (-0, -1, 0), (-0, -1, 0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1)]
                point3f[] points = [(-4, -4, -4), (4, -4, -4), (-4, 4, -4), (4, 4, -4), (-4, -4, 4), (4, -4, 4), (-4, 4, 4), (4, 4, 4)]
                color3f[] primvars:displayColor = [(0.7, 0.7, 0.7)]
                token visibility = "inherited"
                matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 4.232797030419873, 0, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }
        }
    }

    def Xform "null2"
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, -17.478219716788157, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Xform "null3"
        {
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (0.9994939170152904, 0, 0.031810530480200265, 0), (-0, 1, 0, 0), (-0.031810530480200265, -0, 0.9994939170152904, 0), (0, 0, 0, 1) )
            matrix4d xformOp:transform.timeSamples = {
                1: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) ),
                2: ( (0.9994939170152904, 0, -0.03181053048019907, 0), (0, 1, 0, 0), (0.03181053048019907, 0, 0.9994939170152904, 0), (0, 0, 0, 1) ),
                3: ( (0.9923678501135846, 0, -0.12331281385542217, 0), (0, 1, 0, 0), (0.12331281385542217, 0, 0.9923678501135846, 0), (0, 0, 0, 1) ),
                4: ( (0.9637760657954398, 0, -0.2667127574748984, 0), (0, 1, 0, 0), (0.2667127574748984, 0, 0.9637760657954398, 0), (0, 0, 0, 1) ),
                5: ( (0.8936326403234123, 0, -0.4487991802004621, 0), (0, 1, 0, 0), (0.4487991802004621, 0, 0.8936326403234123, 0), (0, 0, 0, 1) ),
                6: ( (0.7619387892003272, 0, -0.6476490419292993, 0), (0, 1, 0, 0), (0.6476490419292993, 0, 0.7619387892003272, 0), (0, 0, 0, 1) ),
                7: ( (0.5555702330196023, 0, -0.8314696123025452, 0), (0, 1, 0, 0), (0.8314696123025452, 0, 0.5555702330196023, 0), (0, 0, 0, 1) ),
                8: ( (0.275462588954633, 0, -0.9613117923371225, 0), (0, 1, 0, 0), (0.9613117923371225, 0, 0.275462588954633, 0), (0, 0, 0, 1) ),
                9: ( (-0.058144828910475774, -0, -0.9983081582712682, 0), (0, 1, -0, 0), (0.9983081582712682, 0, -0.058144828910475774, 0), (0, 0, 0, 1) ),
                10: ( (-0.40524131400498914, -0, -0.914209755703531, 0), (0, 1, -0, 0), (0.914209755703531, 0, -0.40524131400498914, 0), (0, 0, 0, 1) ),
                11: ( (-0.7122302639075304, -0, -0.7019459033103687, 0), (0, 1, -0, 0), (0.7019459033103687, 0, -0.7122302639075304, 0), (0, 0, 0, 1) ),
                12: ( (-0.924227019806455, -0, -0.3818434441753303, 0), (0, 1, -0, 0), (0.3818434441753303, 0, -0.924227019806455, 0), (0, 0, 0, 1) ),
                13: ( (-1, -0, -1.2246467991473532e-16, 0), (0, 1, -0, 0), (1.2246467991473532e-16, 0, -1, 0), (0, 0, 0, 1) ),
                14: ( (-0.9242270198064552, -0, 0.38184344417533006, 0), (-0, 1, -0, 0), (-0.38184344417533006, -0, -0.9242270198064552, 0), (0, 0, 0, 1) ),
                15: ( (-0.712230263907531, -0, 0.7019459033103682, 0), (-0, 1, -0, 0), (-0.7019459033103682, -0, -0.712230263907531, 0), (0, 0, 0, 1) ),
                16: ( (-0.40524131400498953, -0, 0.9142097557035308, 0), (-0, 1, -0, 0), (-0.9142097557035308, -0, -0.40524131400498953, 0), (0, 0, 0, 1) ),
                17: ( (-0.05814482891047624, -0, 0.9983081582712682, 0), (-0, 1, -0, 0), (-0.9983081582712682, -0, -0.05814482891047624, 0), (0, 0, 0, 1) ),
                18: ( (0.27546258895463105, 0, 0.961311792337123, 0), (-0, 1, 0, 0), (-0.961311792337123, -0, 0.27546258895463105, 0), (0, 0, 0, 1) ),
                19: ( (0.5555702330196012, 0, 0.831469612302546, 0), (-0, 1, 0, 0), (-0.831469612302546, -0, 0.5555702330196012, 0), (0, 0, 0, 1) ),
                20: ( (0.7619387892003271, 0, 0.6476490419292995, 0), (-0, 1, 0, 0), (-0.6476490419292995, -0, 0.7619387892003271, 0), (0, 0, 0, 1) ),
                21: ( (0.8936326403234117, 0, 0.4487991802004632, 0), (-0, 1, 0, 0), (-0.4487991802004632, -0, 0.8936326403234117, 0), (0, 0, 0, 1) ),
                22: ( (0.9637760657954394, 0, 0.2667127574749003, 0), (-0, 1, 0, 0), (-0.2667127574749003, -0, 0.9637760657954394, 0), (0, 0, 0, 1) ),
                23: ( (0.9923678501135846, 0, 0.12331281385542206, 0), (-0, 1, 0, 0), (-0.12331281385542206, -0, 0.9923678501135846, 0), (0, 0, 0, 1) ),
                24: ( (0.9994939170152904, 0, 0.031810530480200265, 0), (-0, 1, 0, 0), (-0.031810530480200265, -0, 0.9994939170152904, 0), (0, 0, 0, 1) ),
            }
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def Mesh "cube1"
            {
                float3[] extent = [(-4, -4, -4), (4, 4, 4)]
                int[] faceVertexCounts = [4, 4, 4, 4, 4, 4]
                int[] faceVertexIndices = [0, 2, 3, 1, 0, 1, 5, 4, 0, 4, 6, 2, 1, 3, 7, 5, 2, 6, 7, 3, 4, 5, 7, 6]
                normal3f[] normals = [(0, -0, -1), (0, -0, -1), (0, -0, -1), (0, -0, -1), (-0, -1, 0), (-0, -1, 0), (-0, -1, 0), (-0, -1, 0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1)]
                point3f[] points = [(-4, -4, -4), (4, -4, -4), (-4, 4, -4), (4, 4, -4), (-4, -4, 4), (4, -4, 4), (-4, 4, 4), (4, 4, 4)]
                color3f[] primvars:displayColor = [(0.7, 0.7, 0.7)]
                token visibility = "inherited"
                matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 4.232797030419873, 0, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }
        }
    }

    def Xform "null4"
    {
        token visibility = "inherited"
        token visibility.timeSamples = {
            5: "invisible",
            10: "inherited",
            15: "invisible",
            20: "inherited",
        }
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (-18.347778922206174, 0, -0.4663283080699756, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Xform "null5"
        {
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (0.9994939170152904, 0, 0.031810530480200265, 0), (-0, 1, 0, 0), (-0.031810530480200265, -0, 0.9994939170152904, 0), (0, 0, 0, 1) )
            matrix4d xformOp:transform.timeSamples = {
                1: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) ),
                2: ( (0.9994939170152904, 0, -0.03181053048019907, 0), (0, 1, 0, 0), (0.03181053048019907, 0, 0.9994939170152904, 0), (0, 0, 0, 1) ),
                3: ( (0.9923678501135846, 0, -0.12331281385542217, 0), (0, 1, 0, 0), (0.12331281385542217, 0, 0.9923678501135846, 0), (0, 0, 0, 1) ),
                4: ( (0.9637760657954398, 0, -0.2667127574748984, 0), (0, 1, 0, 0), (0.2667127574748984, 0, 0.9637760657954398, 0), (0, 0, 0, 1) ),
                5: ( (0.8936326403234123, 0, -0.4487991802004621, 0), (0, 1, 0, 0), (0.4487991802004621, 0, 0.8936326403234123, 0), (0, 0, 0, 1) ),
                6: ( (0.7619387892003272, 0, -0.6476490419292993, 0), (0, 1, 0, 0), (0.6476490419292993, 0, 0.7619387892003272, 0), (0, 0, 0, 1) ),
                7: ( (0.5555702330196023, 0, -0.8314696123025452, 0), (0, 1, 0, 0), (0.8314696123025452, 0, 0.5555702330196023, 0), (0, 0, 0, 1) ),
                8: ( (0.275462588954633, 0, -0.9613117923371225, 0), (0, 1, 0, 0), (0.9613117923371225, 0, 0.275462588954633, 0), (0, 0, 0, 1) ),
                9: ( (-0.058144828910475774, -0, -0.9983081582712682, 0), (0, 1, -0, 0), (0.9983081582712682, 0, -0.058144828910475774, 0), (0, 0, 0, 1) ),
                10: ( (-0.40524131400498914, -0, -0.914209755703531, 0), (0, 1, -0, 0), (0.914209755703531, 0, -0.40524131400498914, 0), (0, 0, 0, 1) ),
                11: ( (-0.7122302639075304, -0, -0.7019459033103687, 0), (0, 1, -0, 0), (0.7019459033103687, 0, -0.7122302639075304, 0), (0, 0, 0, 1) ),
                12: ( (-0.924227019806455, -0, -0.3818434441753303, 0), (0, 1, -0, 0), (0.3818434441753303, 0, -0.924227019806455, 0), (0, 0, 0, 1) ),
                13: ( (-1, -0, -1.2246467991473532e-16, 0), (0, 1, -0, 0), (1.2246467991473532e-16, 0, -1, 0), (0, 0, 0, 1) ),
                14: ( (-0.9242270198064552, -0, 0.38184344417533006, 0), (-0, 1, -0, 0), (-0.38184344417533006, -0, -0.9242270198064552, 0), (0, 0, 0, 1) ),
                15: ( (-0.712230263907531, -0, 0.7019459033103682, 0), (-0, 1, -0, 0), (-0.7019459033103682, -0, -0.712230263907531, 0), (0, 0, 0, 1) ),
                16: ( (-0.40524131400498953, -0, 0.9142097557035308, 0), (-0, 1, -0, 0), (-0.9142097557035308, -0, -0.40524131400498953, 0), (0, 0, 0, 1) ),
                17: ( (-0.05814482891047624, -0, 0.9983081582712682, 0), (-0, 1, -0, 0), (-0.9983081582712682, -0, -0.05814482891047624, 0), (0, 0, 0, 1) ),
                18: ( (0.27546258895463105, 0, 0.961311792337123, 0), (-0, 1, 0, 0), (-0.961311792337123, -0, 0.27546258895463105, 0), (0, 0, 0, 1) ),
                19: ( (0.5555702330196012, 0, 0.831469612302546, 0), (-0, 1, 0, 0), (-0.831469612302546, -0, 0.5555702330196012, 0), (0, 0, 0, 1) ),
                20: ( (0.7619387892003271, 0, 0.6476490419292995, 0), (-0, 1, 0, 0), (-0.6476490419292995, -0, 0.7619387892003271, 0), (0, 0, 0, 1) ),
                21: ( (0.8936326403234117, 0, 0.4487991802004632, 0), (-0, 1, 0, 0), (-0.4487991802004632, -0, 0.8936326403234117, 0), (0, 0, 0, 1) ),
                22: ( (0.9637760657954394, 0, 0.2667127574749003, 0), (-0, 1, 0, 0), (-0.2667127574749003, -0, 0.9637760657954394, 0), (0, 0, 0, 1) ),
                23: ( (0.9923678501135846, 0, 0.12331281385542206, 0), (-0, 1, 0, 0), (-0.12331281385542206, -0, 0.9923678501135846, 0), (0, 0, 0, 1) ),
                24: ( (0.9994939170152904, 0, 0.031810530480200265, 0), (-0, 1, 0, 0), (-0.031810530480200265, -0, 0.9994939170152904, 0), (0, 0, 0, 1) ),
            }
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def Mesh "cube2"
            {
                float3[] extent = [(-4, -4, -4), (4, 4, 4)]
                int[] faceVertexCounts = [4, 4, 4, 4, 4, 4]
                int[] faceVertexIndices = [0, 2, 3, 1, 0, 1, 5, 4, 0, 4, 6, 2, 1, 3, 7, 5, 2, 6, 7, 3, 4, 5, 7, 6]
                normal3f[] normals = [(0, -0, -1), (0, -0, -1), (0, -0, -1), (0, -0, -1), (-0, -1, 0), (-0, -1, 0), (-0, -1, 0), (-0, -1, 0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1)]
                point3f[] points = [(-4, -4, -4), (4, -4, -4), (-4, 4, -4), (4, 4, -4), (-4, -4, 4), (4, -4, 4), (-4, 4, 4), (4, 4, 4)]
                color3f[] primvars:displayColor = [(0.7, 0.7, 0.7)]
                token visibility = "inherited"
                matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 4.232797030419873, 0, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }
        }
    }

    def Xform "null6"
    {
        token visibility = "inherited"
        token visibility.timeSamples = {
            5: "invisible",
            10: "inherited",
            15: "invisible",
            20: "inherited",
        }
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (17.4301911425111, 0, 0.7381224587582409, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Xform "null7"
        {
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (0.9994939170152904, 0, 0.031810530480200265, 0), (-0, 1, 0, 0), (-0.031810530480200265, -0, 0.9994939170152904, 0), (0, 0, 0, 1) )
            matrix4d xformOp:transform.timeSamples = {
                1: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) ),
                2: ( (0.9994939170152904, 0, -0.03181053048019907, 0), (0, 1, 0, 0), (0.03181053048019907, 0, 0.9994939170152904, 0), (0, 0, 0, 1) ),
                3: ( (0.9923678501135846, 0, -0.12331281385542217, 0), (0, 1, 0, 0), (0.12331281385542217, 0, 0.9923678501135846, 0), (0, 0, 0, 1) ),
                4: ( (0.9637760657954398, 0, -0.2667127574748984, 0), (0, 1, 0, 0), (0.2667127574748984, 0, 0.9637760657954398, 0), (0, 0, 0, 1) ),
                5: ( (0.8936326403234123, 0, -0.4487991802004621, 0), (0, 1, 0, 0), (0.4487991802004621, 0, 0.8936326403234123, 0), (0, 0, 0, 1) ),
                6: ( (0.7619387892003272, 0, -0.6476490419292993, 0), (0, 1, 0, 0), (0.6476490419292993, 0, 0.7619387892003272, 0), (0, 0, 0, 1) ),
                7: ( (0.5555702330196023, 0, -0.8314696123025452, 0), (0, 1, 0, 0), (0.8314696123025452, 0, 0.5555702330196023, 0), (0, 0, 0, 1) ),
                8: ( (0.275462588954633, 0, -0.9613117923371225, 0), (0, 1, 0, 0), (0.9613117923371225, 0, 0.275462588954633, 0), (0, 0, 0, 1) ),
                9: ( (-0.058144828910475774, -0, -0.9983081582712682, 0), (0, 1, -0, 0), (0.9983081582712682, 0, -0.058144828910475774, 0), (0, 0, 0, 1) ),
                10: ( (-0.40524131400498914, -0, -0.914209755703531, 0), (0, 1, -0, 0), (0.914209755703531, 0, -0.40524131400498914, 0), (0, 0, 0, 1) ),
                11: ( (-0.7122302639075304, -0, -0.7019459033103687, 0), (0, 1, -0, 0), (0.7019459033103687, 0, -0.7122302639075304, 0), (0, 0, 0, 1) ),
                12: ( (-0.924227019806455, -0, -0.3818434441753303, 0), (0, 1, -0, 0), (0.3818434441753303, 0, -0.924227019806455, 0), (0, 0, 0, 1) ),
                13: ( (-1, -0, -1.2246467991473532e-16, 0), (0, 1, -0, 0), (1.2246467991473532e-16, 0, -1, 0), (0, 0, 0, 1) ),
                14: ( (-0.9242270198064552, -0, 0.38184344417533006, 0), (-0, 1, -0, 0), (-0.38184344417533006, -0, -0.9242270198064552, 0), (0, 0, 0, 1) ),
                15: ( (-0.712230263907531, -0, 0.7019459033103682, 0), (-0, 1, -0, 0), (-0.7019459033103682, -0, -0.712230263907531, 0), (0, 0, 0, 1) ),
                16: ( (-0.40524131400498953, -0, 0.9142097557035308, 0), (-0, 1, -0, 0), (-0.9142097557035308, -0, -0.40524131400498953, 0), (0, 0, 0, 1) ),
                17: ( (-0.05814482891047624, -0, 0.9983081582712682, 0), (-0, 1, -0, 0), (-0.9983081582712682, -0, -0.05814482891047624, 0), (0, 0, 0, 1) ),
                18: ( (0.27546258895463105, 0, 0.961311792337123, 0), (-0, 1, 0, 0), (-0.961311792337123, -0, 0.27546258895463105, 0), (0, 0, 0, 1) ),
                19: ( (0.5555702330196012, 0, 0.831469612302546, 0), (-0, 1, 0, 0), (-0.831469612302546, -0, 0.5555702330196012, 0), (0, 0, 0, 1) ),
                20: ( (0.7619387892003271, 0, 0.6476490419292995, 0), (-0, 1, 0, 0), (-0.6476490419292995, -0, 0.7619387892003271, 0), (0, 0, 0, 1) ),
                21: ( (0.8936326403234117, 0, 0.4487991802004632, 0), (-0, 1, 0, 0), (-0.4487991802004632, -0, 0.8936326403234117, 0), (0, 0, 0, 1) ),
                22: ( (0.9637760657954394, 0, 0.2667127574749003, 0), (-0, 1, 0, 0), (-0.2667127574749003, -0, 0.9637760657954394, 0), (0, 0, 0, 1) ),
                23: ( (0.9923678501135846, 0, 0.12331281385542206, 0), (-0, 1, 0, 0), (-0.12331281385542206, -0, 0.9923678501135846, 0), (0, 0, 0, 1) ),
                24: ( (0.9994939170152904, 0, 0.031810530480200265, 0), (-0, 1, 0, 0), (-0.031810530480200265, -0, 0.9994939170152904, 0), (0, 0, 0, 1) ),
            }
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def Mesh "cube3"
            {
                float3[] extent = [(-4, -4, -4), (4, 4, 4)]
                int[] faceVertexCounts = [4, 4, 4, 4, 4, 4]
                int[] faceVertexIndices = [0, 2, 3, 1, 0, 1, 5, 4, 0, 4, 6, 2, 1, 3, 7, 5, 2, 6, 7, 3, 4, 5, 7, 6]
                normal3f[] normals = [(0, -0, -1), (0, -0, -1), (0, -0, -1), (0, -0, -1), (-0, -1, 0), (-0, -1, 0), (-0, -1, 0), (-0, -1, 0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1)]
                point3f[] points = [(-4, -4, -4), (4, -4, -4), (-4, 4, -4), (4, 4, -4), (-4, -4, 4), (4, -4, 4), (-4, 4, 4), (4, 4, 4)]
                color3f[] primvars:displayColor = [(0.7, 0.7, 0.7)]
                token visibility = "inherited"
                matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 4.232797030419873, 0, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }
        }
    }
}

